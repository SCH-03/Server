namespace ServerCore
{
  class Lock                                                  
    {

        ManualResetEvent _available = new ManualResetEvent(true);                     //AutoResetEvent와는 다르게 한번에 여러 신호를 받아올 수 있기 때문에 그러한 경우에 사용함.
        public void Acquire()          
        {
            _available.WaitOne();                                                    
            _available.Reset();                                                       //ManualReset에는 WaitOne에 포함되어있지 않기때문에 따로 코드를 작성해 줘야하는데 이러한 이유로 원자성이 깨져서 출력값이 변하게된다.
        }

        public void Release() 
        {
            _available.Set();                                 
        }
    }
    class Program
    {
        static int _num = 0;
        static Lock _lock = new Lock();

        static void Thread_1()
        {
            for(int i=0; i<100000; i++)
            {
                _lock.Acquire();
                _num++;
                _lock.Release();                         
            }
        }
        static void Thread_2()
        {
            for (int i = 0; i < 100000; i++)
            {
                _lock.Acquire();
                _num--;
                _lock.Release();
            }
        }


        static void Main(string[] args)
        {
            Task t1 = new Task(Thread_1);
            Task t2 = new Task(Thread_2);

            t1.Start();
            t2.Start();

            Task.WaitAll(t1, t2);

            Console.WriteLine(_num);

        }
    }
}
