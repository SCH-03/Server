namespace ServerCore
{
   
    class Program
    {
        static int number = 0;
        static object _lock = new object();

        static void Thread_1()
        {
            for (int i = 0; i < 100000; i++)
            {
                
                Monitor.Enter(_lock);           //다른 스레드가 접근하지 못하게 문을 잠금.
                {
                    number++;
                    return;                    //쓰레드 자체를 나가버림.      //문을 잠그기만 하고 도망가서 다른곳에서 참조할 수 없는 상태로만듦으로써 DeadLock현상이 발생.
                }
                Monitor.Exit(_lock);           //작업이 끝났으니 문을 열어줌.
            }                                          
        }                                               
        static void Thread_2()
        {
            for (int i = 0; i < 100000; i++)
            {
                Monitor.Enter(_lock);
                {
                    number--;
                    break;                      //반복문(for, while, foreach 등)만 나감.
                }
                Monitor.Exit(_lock);
            }
        }
        static void Main(string[] args)
        {
            Task t1 = new Task(Thread_1);
            Task t2 = new Task(Thread_2);

            t1.Start();                                
            t2.Start();                                

            Task.WaitAll(t1, t2);                       
            Console.WriteLine(number);                  
        }
    }
}
